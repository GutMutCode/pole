type Zombie = {
  position: Position,
  health: Int,
  state: ZombieState,
  target_player: Int
}

type ZombieState = Idle | Chase | Attack

@source("games/zomboid/specs/zombie.pole")

func create_zombie(x: Int, y: Int) -> Zombie:
  {
    position: { x: x, y: y },
    health: 50,
    state: Idle,
    target_player: -1
  }

func distance(pos1: Position, pos2: Position) -> Int:
  let dx = if pos1.x > pos2.x then pos1.x - pos2.x else pos2.x - pos1.x in
  let dy = if pos1.y > pos2.y then pos1.y - pos2.y else pos2.y - pos1.y in
  dx + dy

func update_zombie(zombie: Zombie, player: Player, dt: Float64) -> Zombie:
  let dist = distance(zombie.position, player.position) in
  if dist > 10 then
    { position: zombie.position, health: zombie.health, state: Idle, target_player: -1 }
  else if dist > 1 then
    { position: zombie.position, health: zombie.health, state: Chase, target_player: 0 }
  else
    { position: zombie.position, health: zombie.health, state: Attack, target_player: 0 }

func is_zombie_alive(zombie: Zombie) -> Bool:
  zombie.health > 0

@test_case(expected=true)
func test_create_zombie() -> Bool:
  let zombie = create_zombie(5, 5) in
  zombie.position.x == 5 && zombie.position.y == 5 && zombie.health == 50

@test_case(expected=7)
func test_distance() -> Int:
  distance({ x: 0, y: 0 }, { x: 3, y: 4 })

@test_case(expected=true)
func test_zombie_alive() -> Bool:
  let zombie = create_zombie(10, 10) in
  is_zombie_alive(zombie)
