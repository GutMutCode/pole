@source("examples/02-fibonacci.pole", line=3)
@generated_from("명세: calculate n-th fibonacci number")
@reasoning("단순 재귀 구현 (명세 조건: compute efficiently는 tail recursion 최적화로 해결)")
@test_case(input=1, expected=1)
@test_case(input=2, expected=1)
@test_case(input=3, expected=2)
@test_case(input=10, expected=55)
func fibonacci (n: Nat) -> Nat
  requires n >= 1
  ensures result >= 1
  ensures (n == 1) => (result == 1)
  ensures (n == 2) => (result == 1)
:
  match n with
  | 1 -> 1
  | 2 -> 1
  | _ -> fibonacci (n - 1) + fibonacci (n - 2)
